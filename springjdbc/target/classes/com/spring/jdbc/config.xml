<?xml version="1.0" encoding="UTF-8"?>
                                            <!-- This file "config.xml" for 1 ex - is placed out of springcore package , then working    -->
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:p="http://www.springframework.org/schema/p"
xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd">


<!--1. MAking the connection using DAtamagager class -->

<bean class="org.springframework.jdbc.datasource.DriverManagerDataSource" 
name="ds" >

<property name="driverClassName" value="com.mysql.cj.jdbc.Driver" /> 
<property name="url" value="jdbc:mysql://localhost:3306/springjdbc"  />
<property name="username" value="root"  />
<property name="password" value="root"  />
 
</bean>



<!--the class we have taken from jdbc template crtl+shift+t  -->
<!--
<bean class="org.springframework.jdbc.core.JdbcTemplate" 
name="jdbcTemplate"  >
     <property name="dataSource">
     <ref bean="ds" />
     </property>

</bean>
Or can use single line declaration using p schema
-->

<bean class="org.springframework.jdbc.core.JdbcTemplate" 
name="jdbcTemplate"  p:dataSource-ref="ds" />

<!--  2.  We are using the JDBC class object to make connection , and StudentDaoImp has obj of jdbcTemplate , so it is decalred before.-->
<bean class="com.spring.jdbc.dao.StudentDaoImpl" name="studentDao" >
<property name="jdbcTemplate" ref="jdbcTemplate" />
</bean>

</beans>
